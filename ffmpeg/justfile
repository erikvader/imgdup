default:
    @just --list --justfile '{{justfile()}}'

ffversion := "6.0.1"
source_dir := "source"
install_dir := "install"
prefix_dir := justfile_directory() / install_dir

rpath_dir := prefix_dir / "lib"
rpath := "true"

# Flags copied from https://gitlab.archlinux.org/archlinux/packaging/packages/ffmpeg/-/blob/2-6.0-13/PKGBUILD?ref_type=tags
# Removed:
# --enable-avisynth \ Some scripting post-processing stuff?
# --enable-nvdec \ nvidia
# --enable-nvenc \ nvidia
arch_flags := """
  --disable-debug \
  --disable-static \
  --disable-stripping \
  --enable-amf \
  --enable-cuda-llvm \
  --enable-lto \
  --enable-fontconfig \
  --enable-gmp \
  --enable-gnutls \
  --enable-gpl \
  --enable-ladspa \
  --enable-libaom \
  --enable-libass \
  --enable-libbluray \
  --enable-libbs2b \
  --enable-libdav1d \
  --enable-libdrm \
  --enable-libfreetype \
  --enable-libfribidi \
  --enable-libgsm \
  --enable-libiec61883 \
  --enable-libjack \
  --enable-libjxl \
  --enable-libmodplug \
  --enable-libmp3lame \
  --enable-libopencore_amrnb \
  --enable-libopencore_amrwb \
  --enable-libopenjpeg \
  --enable-libopenmpt \
  --enable-libopus \
  --enable-libpulse \
  --enable-librav1e \
  --enable-librsvg \
  --enable-libsoxr \
  --enable-libspeex \
  --enable-libsrt \
  --enable-libssh \
  --enable-libsvtav1 \
  --enable-libtheora \
  --enable-libv4l2 \
  --enable-libvidstab \
  --enable-libvmaf \
  --enable-libvorbis \
  --enable-libvpl \
  --enable-libvpx \
  --enable-libwebp \
  --enable-libx264 \
  --enable-libx265 \
  --enable-libxcb \
  --enable-libxml2 \
  --enable-libxvid \
  --enable-libzimg \
  --enable-opencl \
  --enable-opengl \
  --enable-shared \
  --enable-version3 \
  --enable-vulkan
"""

all: clean clone configure build

clone:
    git clone --depth 1 --branch n{{ffversion}} https://git.ffmpeg.org/ffmpeg.git {{source_dir}}

configure:
    cd {{source_dir}} && ./configure \
      --prefix={{prefix_dir}} \
      --disable-programs \
      --disable-doc \
      {{ if rpath == "true" {"--extra-ldflags=-Wl,-rpath," + rpath_dir} else {""} }} \
      {{arch_flags}}

build:
    cd {{source_dir}} && make -j {{num_cpus()}} install_dir

clean:
    rm -vrf {{install_dir}} {{source_dir}}
